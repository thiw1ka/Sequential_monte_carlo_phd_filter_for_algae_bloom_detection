<!--launch complete system -->

<launch>
<!--simulator launch -->
<include file="$(find cyanobloom_simulation)/launch/lake_sabbatus.launch"  />
<!-- argument to load file via command line 
<arg name="folder"/>
-->

<!--Parameters/-->
<!--how many filter runs should perform/-->
<!--should equal to number of list of blooms/-->
<param name="cycles" type="int" value="10"/>

<!-- file path of blooms location file and its name 
<param name="init_filename" type="string" value="initial_ground_truth.txt"/>
<param name="bloomLoc_fpath" type="string" value="~/catkin_ws/src/uri_soft_wip/cyanobloom/cyanob_phd_filter/results/bloom_coordinates_wind_drift/" />
-->


<!--topic names to subscribe and publish/-->
<param 	name = "meas_topic_name" 		type = "string" 	value = "/bloom_locations_topic" />
<param 	name = "drone_pose" 			type = "string" 	value = "/drone_0/gt_pose" /><!--drone pose-->
<param 	name = "usv_measurement" 		type = "string" 	value = "/bloom_concentration_value_at_USV_location" /><!--boat meas-->
<param 	name = "Publish_results_topic" 	type = "string" 	value = "filter_results" />
<param  name ="init_filename" 			type = "string" 	value = "initial_ground_truth.txt"/> <!--For Diagnostic node. Init file for filter-->
<!-- <param 	name = "_init_filename" 		type = "string" 	value = "bloom_coordinates_northeast_wind_drift0.txt" /> -->
<param 	name = "bloomLoc_fpath" 		type = "string" 	value = "/home/thivanka/catkin_ws/src/uri_soft_wip/cyanobloom_sabbatus/Data_files/drew_results/2016_modified" />
<param 	name = "bloom_topic" 			type = "string" 	value = "particle_list_for_gazebo" />
<param  name = "folder_path" 			type = "string" 	value = "~/catkin_ws/src/uri_soft_wip/cyanobloom_sabbatus/results/test/" />

<!--node to read and publish blooms into gazebo/-->
<node 	name 	= "blooms_publisher_node" 
		pkg  	= "cyanob_phd_filter_sabbatus"  
		type 	= "cyanob_phd_filter_sabbatus_blooms_publisher_node" 
		output	= "log" 
		required = "true" 
/>

<!--python plotting script/--> 
<node 	name="plotter" 
		pkg="cyanob_phd_filter_sabbatus"  
		type="bloom_phd_plot.py" 
		output="screen"   
/>

<!--python drone velocity/--> 
<node 	name="drone_velocity" 
		pkg="cyanobloom_simulation"  
		type="drone_command_velocities.py"
		output="log"
/>

<!--python pos manager velocity /-->
<node 	name="drone_pos_manager" 
		pkg="cyanobloom_simulation"  
		type="drone_positioning_manager.py" 
		output="screen"
/>

<!--python pos manager velocity /-->
<node 	name="gui" 
		pkg="cyanob_phd_filter_sabbatus"  
		type="gui.py" 
		output="log"
		required = "true"
/>
<!--measurement update node/-->
<node   name="cyanob_phd_filter_sabbatus" 
		pkg="cyanob_phd_filter_sabbatus"
		type="cyanob_phd_filter_sabbatus_bloom_filter_node" 
		output="log"   
/>

<!-- Diagnostics node/-->
<node 	name="Diagnostics_node" 
		pkg="cyanob_phd_filter_sabbatus"  
		type="cyanob_phd_filter_sabbatus_diagnostics" 
		output="screen"  
		required="true" 
/>

<!--Time update script/--> 
<node 	name="Time_Update_node" 
		pkg="cyanob_phd_filter_sabbatus"  
		type="time_update.py" 
		output="log" 
		required="true"  
/>


</launch>
